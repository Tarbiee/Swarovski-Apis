// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Swarovski_Apis.Data;

#nullable disable

namespace Swarovski_Apis.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240704090226_Seed data")]
    partial class Seeddata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Swarovski_Apis.Models.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Swarovski_Apis.Models.Entities.CartJewel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("JewelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("JewelId");

                    b.ToTable("CartJewels");
                });

            modelBuilder.Entity("Swarovski_Apis.Models.Entities.Jewel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Jewels");

                    b.HasData(
                        new
                        {
                            id = 1,
                            description = "A beautiful diamond necklace made of 18k gold.",
                            image = "https://jewelryexchange.com/wp-content/uploads/2022/02/NXX01-Z0002.jpg",
                            material = "Gold",
                            name = "Diamond Necklace",
                            price = 1000
                        },
                        new
                        {
                            id = 2,
                            description = "Elegant sapphire earrings in white gold setting.",
                            image = "https://www.levinsfinejewellery.co.uk/wp-content/uploads/2018/09/241000022.jpg",
                            material = "White Gold",
                            name = "Sapphire Earrings",
                            price = 500
                        },
                        new
                        {
                            id = 3,
                            description = "A classic emerald ring set in platinum.",
                            image = "https://static.austenblake.com/image/product_v2/clrn03028/rf0012580/detail/3d/ww/em1/0001.jpg",
                            material = "Platinum",
                            name = "Emerald Ring",
                            price = 750
                        },
                        new
                        {
                            id = 4,
                            description = "A vibrant ruby bracelet with a sterling silver chain.",
                            image = "https://www.gregoryjewellers.com.au/wp-content/uploads/2021/02/RGB006-308900-12-Bracelet-WG-B1.jpg",
                            material = "Silver",
                            name = "Ruby Bracelet",
                            price = 350
                        });
                });

            modelBuilder.Entity("Swarovski_Apis.Models.Entities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passwordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Swarovski_Apis.Models.Entities.Cart", b =>
                {
                    b.HasOne("Swarovski_Apis.Models.Entities.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Swarovski_Apis.Models.Entities.CartJewel", b =>
                {
                    b.HasOne("Swarovski_Apis.Models.Entities.Cart", "Cart")
                        .WithMany("CartJewels")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Swarovski_Apis.Models.Entities.Jewel", "Jewel")
                        .WithMany("CartJewels")
                        .HasForeignKey("JewelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Jewel");
                });

            modelBuilder.Entity("Swarovski_Apis.Models.Entities.Cart", b =>
                {
                    b.Navigation("CartJewels");
                });

            modelBuilder.Entity("Swarovski_Apis.Models.Entities.Jewel", b =>
                {
                    b.Navigation("CartJewels");
                });

            modelBuilder.Entity("Swarovski_Apis.Models.Entities.User", b =>
                {
                    b.Navigation("Carts");
                });
#pragma warning restore 612, 618
        }
    }
}
